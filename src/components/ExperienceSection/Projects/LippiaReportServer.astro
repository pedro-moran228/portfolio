---
import Carousel from "../../common/Carousel.astro";
import Technologies from "../../common/Technologies.astro";
---

<article id="box-project-experience" class="relative pt-[200px] z-0 space-y-12">
  <!-- <TimeLapseLine label="2021" /> -->
  <header class="container-sm">
    <h3 class="text-current">Lippia Report Server</h3>
    <p>
      Participé en la escalabilidad del proyecto, mejorando la experiencia de
      usuario y las capacidades del producto.
    </p>
    <p>Agregué nuevas caracteristicas como:</p>
    <ul class="space-y-1 mt-2 [&>li]:marker">
      <li>
        Cacheo y Revalidación de datos con <span class="font-bold">SWR</span>.
      </li>
      <li>Nuevas Rutas dinámicas</li>
      <li>Regionalización.</li>
      <li>Estados globales con <span class="font-bold">useContext</span>.</li>
    </ul>
  </header>
  <section
    id="slider-lrs"
    class="relative container-sm rounded-2xl shadow-[0px_0px_40px_10px_#0000006e]"
  >
    <div
      class={`
      overflow-hidden rounded-2xl 
      [&>img]:transition-transform 
      [&>img]:duration-500 
      group
      after:content-[''] 
      after:absolute
      after:top-0 
      after:left-0 
      after:w-full 
      after:h-full
      after:opacity-0
      hover:after:opacity-100
      after:bg-[linear-gradient(90deg,_rgba(10,_27,_59,_0.45),_rgba(255,0,0,0)_10%),linear-gradient(-90deg,_rgba(10,_27,_59,_0.45),_rgba(255,0,0,0)_10%);] 
      after:duration-200`}
    >
      <!-- snap-mandatory snap-x [&>img]:snap-center -->
      <div
        id="slider-img-box-lrs"
        class="flex overflow-hidden [&>img]:duration-500"
        style="overflow-x: inherit;"
      >
        <img
          data-slide-actived
          loading="lazy"
          src="LRS/LRS_1.png"
          alt="academy"
        />
        <img loading="lazy" src="LRS/LRS_2.png" alt="academy" />
        <img loading="lazy" src="LRS/LRS_3.png" alt="academy" />
        <img loading="lazy" src="LRS/LRS_4.png" alt="academy" />
      </div>
      <button
        id="slider-btn-prev-lrs"
        class="left-0 hidden h-full absolute z-20 top-1/2 -translate-y-1/2 w-[70px] flex-center group-hover:flex hover:scale-125 duration-100"
        ><svg
          stroke="#FFF"
          fill="#FFF"
          class="rotate-180 transform group-hover:scale-125 transition-transform duration-100"
          viewBox="0 0 1024 1024"
          height="20px"
          width="20px"
          xmlns="http://www.w3.org/2000/svg"
          ><path
            d="M271.653 1023.192c-8.685 0-17.573-3.432-24.238-10.097-13.33-13.33-13.33-35.144 0-48.474L703.67 508.163 254.08 58.573c-13.33-13.331-13.33-35.145 0-48.475 13.33-13.33 35.143-13.33 48.473 0L776.38 483.925c13.33 13.33 13.33 35.143 0 48.473l-480.492 480.694c-6.665 6.665-15.551 10.099-24.236 10.099z"
          ></path></svg
        ></button
      >
      <button
        id="slider-btn-next-lrs"
        class="right-0 hidden h-full absolute z-20 top-1/2 -translate-y-1/2 w-[70px] flex-center group-hover:flex hover:scale-125 duration-100"
        ><svg
          stroke="#FFF"
          fill="#FFF"
          class="transform group-hover:scale-125 transition-transform duration-100"
          viewBox="0 0 1024 1024"
          height="20px"
          width="20px"
          xmlns="http://www.w3.org/2000/svg"
          ><path
            d="M271.653 1023.192c-8.685 0-17.573-3.432-24.238-10.097-13.33-13.33-13.33-35.144 0-48.474L703.67 508.163 254.08 58.573c-13.33-13.331-13.33-35.145 0-48.475 13.33-13.33 35.143-13.33 48.473 0L776.38 483.925c13.33 13.33 13.33 35.143 0 48.473l-480.492 480.694c-6.665 6.665-15.551 10.099-24.236 10.099z"
          ></path></svg
        ></button
      >
    </div>
  </section>
  <footer class="container-sm space-y-12 mt-12">
    <p>
      Mi participación en el proyecto fue de <span class="font-bold"
        >4 meses</span
      >, en los que estuve trabajando en el Frontend de la aplicación arreglando
      bugs y agregando nuevas funcionalidades.
    </p>
    <article>
      <h4 class="text-current">Tecnologías</h4>
      <Technologies
        theme="dark"
        grid3Col
        technologies={["React", "TypeScript", "Tailwind"]}
      />
    </article>
  </footer>
  <div>
    <Carousel />
  </div>
</article>

<script>
  const slider = document.querySelector("#slider-img-box-lrs");
  const sliderWidth = slider?.clientWidth;

  // slider?.scrollTo({
  //   left: 0,
  // });

  const btnNext = document.querySelector("#slider-btn-next-lrs") as HTMLElement;
  const btnPrev = document.querySelector("#slider-btn-prev-lrs") as HTMLElement;

  if (slider && sliderWidth) {
    ([...slider.children] as HTMLElement[]).forEach((el, i) => {
      el.style.transform = `translateX(0px)`;
    });
    // console.log(
    //   [...slider.children].findIndex(
    //     (el) => (el as HTMLElement).dataset.slideActived === ""
    //   )
    // );
  }

  const handleMoveSlides = ({
    btn,
    btnType,
  }: {
    btn: HTMLElement;
    btnType: "next" | "prev";
  }) => {
    if (!btn) return;

    btn.addEventListener("click", () => {
      if (!sliderWidth || !slider) return;

      const activedSlideIndex = [...slider.children].findIndex(
        (el) => (el as HTMLElement).dataset.slideActived === ""
      );

      const prevOrNextSlideIndex =
        btnType === "next" ? activedSlideIndex + 1 : activedSlideIndex - 1;
      const isNextBtn = btnType === "next";
      const isPrevBtn = btnType === "prev";

      const currSlide = slider.children.item(activedSlideIndex) as HTMLElement;
      const prevOrNextSlide = slider.children.item(
        prevOrNextSlideIndex
      ) as HTMLElement;

      const isSecondSlide = activedSlideIndex === 1;

      // console.log({ activedSlideMath, isLastSlide });

      if (isNextBtn) {
        const imgClone = slider.firstChild?.cloneNode(true) as HTMLElement;
        const transformValue = Number(
          imgClone.style.transform.split("(")[1].split("px")[0]
        );

        imgClone.style.transform = `translateX(${transformValue}px)`;
        slider.firstChild?.remove();
        if (!imgClone) return;
        slider.append(imgClone);
      }
      // activedSlide = isLastSlide ? 0 : activedSlideMath;

      console.log({ remove: activedSlideIndex, add: prevOrNextSlideIndex });
      slider.children
        .item(activedSlideIndex)
        ?.removeAttribute("data-slide-actived");
      slider.children
        .item(prevOrNextSlideIndex)
        ?.setAttribute("data-slide-actived", "");

      ([...slider.children] as HTMLElement[]).forEach((el, i) => {
        const transformValue =
          //@ts-ignore
          sliderWidth - Number(el.style.transform.split("(")[1].split("px")[0]);

        el.style.transform = `translateX(${-transformValue}px)`;
      });

      // slider.scrollBy({
      //   left: isNextBtn ? sliderWidth : -sliderWidth,
      //   behavior: "smooth",
      // });

      return;
    });

    btn.addEventListener("dblclick", (e) => {
      e.preventDefault();
    });
  };

  handleMoveSlides({ btn: btnNext, btnType: "next" });
  handleMoveSlides({ btn: btnPrev, btnType: "prev" });
</script>
