---
import Technologies from "../../common/Technologies.astro";
---

<article id="box-project-experience" class="container-sm relative z-0">
  <header>
    <h3 class="text-current">Lippia Test Manager</h3>
  </header>
  <section class="mt-8">
    <p>
      Participé como desarrollador frontend en una primera y segunda versión de
      Lippia Test Manager.
    </p>
    <p>
      En la primera versión me encargué de planificación, diseño funcional y
      desarrollo implementando características como:
    </p>
    <ul class="space-y-1 mt-2 [&>li]:marker">
      <li>Rutas dinámicas con Single Page Application.</li>
      <li>
        Estados globales con <span class="font-bold">useContext</span> y <span
          class="font-bold">useReducer</span
        >.
      </li>
      <li>React Custom hooks.</li>
      <li>Formularios.</li>
      <li>
        Autenticación con Herramienta de Gestión (<span class="font-bold"
          >Keycloak</span
        >).
      </li>
      <li>Fetching de datos.</li>
      <li>Tablas con multifuncionales.</li>
    </ul>
    <p>
      Esta primera versión fue descartada y se decidió iniciar una segunda
      versión planteada como un MVP.
    </p>
    <div
      class="my-12 rounded-2xl overflow-hidden shadow-[0px_0px_40px_10px_#0000006e]"
    >
      <img loading="lazy" src="lippia/1.png" alt="academy" />
    </div>
    <p>
      Entre los grandes desafíos que logré completar están la migración de la
      herramienta <span class="font-bold">Create React App</span> a <span
        class="font-bold">Vite</span
      > y la actualización de <span class="font-bold">React v17</span> a <span
        class="font-bold">React v18</span
      >.
    </p>
    <p>
      Mejoré la calidad del software tanto en eficiencia como en escalabilidad
      estandarizando buenas prácticas y técnicas como <span class="font-bold"
        >lazy loading</span
      > para mejorar la experiencia del usuario.
    </p>
    <p>
      Aparte de mi rol en el frontend también he ayudado con el desarrollo del
      backend al estar hecho en <span class="font-bold">NestJs</span>
       (Javascript). Con mis aportes pude mejorar hasta en un <span
        class="font-bold">300%</span
      > la eficiencia del backend en operaciones como obteción y recopilación de
      datos.
    </p>
  </section>
  <footer class="mt-8 space-y-12">
    <article>
      <h4 class="text-current">Tecnologías</h4>
      <Technologies
        theme="dark"
        grid3Col
        technologies={[
          "React",
          "TypeScript",
          "Tailwind",
          "Jest",
          "Testing_Library",
          "Vite",
          "NestJS",
          "PostgreSQL",
        ]}
      />
    </article>
  </footer>
</article>
