---
import AstroIcon from "../Icons/Tech/AstroItem.astro";
import TestingLibraryIcon from "../Icons/Tech/TestingLibraryItem.astro";
import HtmlIcon from "../Icons/Tech/HtmlItem.astro";
import JavaScriptIcon from "../Icons/Tech/JavaScriptItem.astro";
import JestIcon from "../Icons/Tech/JestItem.astro";
import NestJsIcon from "../Icons/Tech/NestJsItem.astro";
import NextJsItem from "../Icons/Tech/NextJsItem.astro";
import PostgreSqlIcon from "../Icons/Tech/PostgreSqltem.astro";
import ReactIcon from "../Icons/Tech/ReactItem.astro";
import TailwindcssIcon from "../Icons/Tech/TailwindcssItem.astro";
import TypescriptIcon from "../Icons/Tech/TypescriptItem.astro";
import ViteItem from "../Icons/Tech/ViteItem.astro";
import SassItem from "../Icons/Tech/SassItem.astro";
import CssItem from "../Icons/Tech/CssItem.astro";

interface Props {
  theme?: "dark" | "light";
  technologies?: (
    | "HTML"
    | "CSS"
    | "JavaScript"
    | "TypeScript"
    | "Astro"
    | "React"
    | "Tailwind"
    | "Testing_Library"
    | "Jest"
    | "NestJS"
    | "SASS"
    | "NextJS"
    | "PostgreSQL"
    | "Vite"
  )[];
  grid3Col?: boolean;
}

const { theme = "dark", grid3Col = false, technologies } = Astro.props;

const techComponets = {
  HTML: {
    Component: HtmlIcon,
    name: "HTML",
  },
  CSS: {
    Component: CssItem,
    name: "CSS",
  },
  // JavaScript: JavaScriptIcon,
  // TypeScript: TypescriptIcon,
  React: {
    Component: ReactIcon,
    name: "React",
  },
  Astro: {
    Component: AstroIcon,
    name: "Astro",
  },
  // NextJS: NextJsItem,
  // Tailwind: TailwindcssIcon,
  // SASS: SassItem,
  // Testing_Library: TestingLibraryIcon,
  // Jest: JestIcon,
  // Vite: ViteItem,
  // NestJS: NestJsIcon,
  // PostgreSQL: PostgreSqlIcon,
};

const techComponetsFiltered = technologies?.map((tech) => techComponets[tech]);
---

<ol
  class={`
    sm:min-w-[414px]
    flex flex-col space-y-2 sm:space-y-0
    sm:grid
    sm:grid-cols-[repeat(2,_1fr)]
    ${grid3Col ? "md:grid-cols-3" : "md:grid-cols-2"}
    sm:gap-3
    w-full 
    place-content-center
  `}
>
  {
    techComponetsFiltered
      ? techComponetsFiltered?.map((C) => <li class={`w-[150px] h-[125px]`} />)
      : Object.values(techComponets).map(({ Component, name }) => (
          <li class="text-white w-[150px]">
            <div
              class={`
              w-[150px] 
              h-[150px]
              rounded-full
              shadow-xl
              border
              border-[#141519]
              bg-[#673f6836]
              flex-center
            `}
            >
              <Component />
            </div>
            <p class="text-center font-semibold text-[22px] mt-[2px]">{name}</p>
          </li>
        ))
  }
</ol>
